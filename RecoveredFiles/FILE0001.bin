BOOTCTL(1)                          bootctl                         BOOTCTL(1)



NNAAMMEE
       bootctl - Control EFI firmware boot settings and manage boot loader

SSYYNNOOPPSSIISS
       bboooottccttll [OPTIONS...] {COMMAND}

DDEESSCCRRIIPPTTIIOONN
       bboooottccttll can check the EFI firmware and boot loader status, list and
       manage available boot loaders and boot loader entries, and install,
       update, or remove the ssyysstteemmdd--bboooott(7) boot loader on the current
       system.

GGEENNEERRIICC EEFFII FFIIRRMMWWAARREE//BBOOOOTT LLOOAADDEERR CCOOMMMMAANNDDSS
       These commands are available on any EFI system, regardless of the boot
       loader used.

       ssttaattuuss
           Shows brief information about the system firmware, the boot loader
           that was used to boot the system, the boot loaders currently
           available in the ESP, the boot loaders listed in the firmware's
           list of boot loaders and the current default boot loader entry. If
           no command is specified, this is the implied default.

       rreebboooott--ttoo--ffiirrmmwwaarree [_B_O_O_L]
           Query or set the "Reboot-Into-Firmware-Setup" flag of the EFI
           firmware. Takes a boolean argument which controls whether to show
           the firmware setup on next system reboot. If the argument is
           omitted shows the current status of the flag, or whether the flag
           is supported. This controls the same flag as ssyysstteemmccttll rreebboooott
           ----ffiirrmmwwaarree--sseettuupp, but is more low-level and allows setting the flag
           independently from actually requesting a reboot.

       ssyysstteemmdd--eeffii--ooppttiioonnss [_S_T_R_I_N_G]
           When called without the optional argument, prints the current value
           of the "SystemdOptions" EFI variable. When called with an argument,
           sets the variable to that value. See ssyysstteemmdd(1) for the meaning of
           that variable.

BBOOOOTT LLOOAADDEERR SSPPEECCIIFFIICCAATTIIOONN CCOOMMMMAANNDDSS
       These commands are available for all boot loaders that implement the
       BBoooott LLooaaddeerr SSppeecciiffiiccaattiioonn[1] and/or the BBoooott LLooaaddeerr IInntteerrffaaccee[2], such
       as ssyysstteemmdd--bboooott.

       lliisstt
           Shows all available boot loader entries implementing the BBoooott
           LLooaaddeerr SSppeecciiffiiccaattiioonn[1], as well as any other entries discovered or
           automatically generated by a boot loader implementing the BBoooott
           LLooaaddeerr IInntteerrffaaccee[2].

       sseett--ddeeffaauulltt _I_D, sseett--oonneesshhoott _I_D
           Sets the default boot loader entry. Takes a single boot loader
           entry ID string as argument. The sseett--oonneesshhoott command will set the
           default entry only for the next boot, the sseett--ddeeffaauulltt will set it
           persistently for all future boots.  Optionally, the boot loader
           entry ID may be specified as one of: @@ddeeffaauulltt, @@oonneesshhoott or
           @@ccuurrrreenntt, which correspond to the current default boot loader entry
           for all future boots, the current default boot loader entry for the
           next boot, and the currently booted boot loader entry. These
           special IDs are resolved to the current values of the EFI variables
           _L_o_a_d_e_r_E_n_t_r_y_D_e_f_a_u_l_t, _L_o_a_d_e_r_E_n_t_r_y_O_n_e_S_h_o_t and _L_o_a_d_e_r_E_n_t_r_y_S_e_l_e_c_t_e_d, see
           BBoooott LLooaaddeerr SSppeecciiffiiccaattiioonn[1] for details. These special IDs are
           primarily useful as a quick way to persistently make the currently
           booted boot loader entry the default choice, or to upgrade the
           default boot loader entry for the next boot to the default boot
           loader entry for all future boots, but may be used for other
           operations too. When an empty string ("") is specified as an ID,
           then the corresponding EFI variable will be unset.

SSYYSSTTEEMMDD--BBOOOOTT CCOOMMMMAANNDDSS
       These commands manage the ssyysstteemmdd--bboooott EFI boot loader, and do not work
       in conjunction with other boot loaders.

       iinnssttaallll
           Installs ssyysstteemmdd--bboooott into the EFI system partition. A copy of
           ssyysstteemmdd--bboooott will be stored as the EFI default/fallback loader at
           _E_S_P/EFI/BOOT/BOOT*.EFI. The boot loader is then added to the top of
           the firmware's boot loader list.

       uuppddaattee
           Updates all installed versions of ssyysstteemmdd--bboooott(7), if the available
           version is newer than the version installed in the EFI system
           partition. This also includes the EFI default/fallback loader at
           _E_S_P/EFI/BOOT/BOOT*.EFI. The boot loader is then added to end of the
           firmware's boot loader list if missing.

       rreemmoovvee
           Removes all installed versions of ssyysstteemmdd--bboooott from the EFI system
           partition and the firmware's boot loader list.

       iiss--iinnssttaalllleedd
           Checks whether ssyysstteemmdd--bboooott is installed in the ESP. Note that a
           single ESP might host multiple boot loaders; this hence checks
           whether ssyysstteemmdd--bboooott is one (of possibly many) installed boot
           loaders -- and neither whether it is the default nor whether it is
           registered in any EFI variables.

       rraannddoomm--sseeeedd
           Generates a random seed and stores it in the EFI System Partition,
           for use by the ssyysstteemmdd--bboooott boot loader. Also, generates a random
           'system token' and stores it persistently as an EFI variable, if
           one has not been set before. If the boot loader finds the random
           seed in the ESP and the system token in the EFI variable it will
           derive a random seed to pass to the OS and a new seed to store in
           the ESP from the combination of both. The random seed passed to the
           OS is credited to the kernel's entropy pool by the system manager
           during early boot, and permits userspace to boot up with an entropy
           pool fully initialized very early on. Also see ssyysstteemmdd--bboooott--ssyysstteemm--
           ttookkeenn..sseerrvviiccee(8).

           See RRaannddoomm SSeeeeddss[3] for further information.

OOPPTTIIOONNSS
       The following options are understood:

       ----eesspp--ppaatthh==
           Path to the EFI System Partition (ESP). If not specified, /efi/,
           /boot/, and /boot/efi/ are checked in turn. It is recommended to
           mount the ESP to /efi/, if possible.

       ----bboooott--ppaatthh==
           Path to the Extended Boot Loader partition, as defined in the BBoooott
           LLooaaddeerr SSppeecciiffiiccaattiioonn[1]. If not specified, /boot/ is checked. It is
           recommended to mount the Extended Boot Loader partition to /boot/,
           if possible.

       --pp, ----pprriinntt--eesspp--ppaatthh
           This option modifies the behaviour of ssttaattuuss. Only prints the path
           to the EFI System Partition (ESP) to standard output and exits.

       --xx, ----pprriinntt--bboooott--ppaatthh
           This option modifies the behaviour of ssttaattuuss. Only prints the path
           to the Extended Boot Loader partition if it exists, and the path to
           the ESP otherwise to standard output and exit. This command is
           useful to determine where to place boot loader entries, as they are
           preferably placed in the Extended Boot Loader partition if it
           exists and in the ESP otherwise.

           Boot Loader Specification Type #1 entries should generally be
           placed in the directory "$(bootctl -x)/loader/entries/". Existence
           of that directory may also be used as indication that boot loader
           entry support is available on the system. Similarly, Boot Loader
           Specification Type #2 entries should be placed in the directory
           "$(bootctl -x)/EFI/Linux/".

           Note that this option (similar to the ----pprriinntt--bbooootthh--ppaatthh option
           mentioned above), is available independently from the boot loader
           used, i.e. also without ssyysstteemmdd--bboooott being installed.

       ----nnoo--vvaarriiaabblleess
           Do not touch the firmware's boot loader list stored in EFI
           variables.

       ----ggrraacceeffuull
           Ignore failure when the EFI System Partition cannot be found, or
           when EFI variables cannot be written. Currently only applies to
           random seed operations.

       ----mmaakkee--mmaacchhiinnee--iidd--ddiirreeccttoorryy==yyeess||nnoo||aauuttoo
           Control creation and deletion of the top-level machine ID directory
           on the file system containing boot loader entries (i.e. beneath the
           file system returned by the ----pprriinntt--bboooott--ppaatthh option, see above)
           during iinnssttaallll and rreemmoovvee, respectively.  "auto" is equivalent to
           "yes" if /etc/machine-id resides on a filesystem other than tmpfs
           and "no" otherwise (in the latter case the machine ID is likely
           transient and hence should not be used persistently in the ESP).
           Defaults to "auto". See mmaacchhiinnee--iidd(5) for details about the machine
           ID concept and file.

           Overriding this may be desirable to hide the machine ID from the
           (unencrypted) ESP, configure a kkeerrnneell--iinnssttaallll(8) script, or,
           conversely, commit a transient machine ID.

           The top-level machine ID directory is useful to allow smooth
           multi-boot installations: each installed OS instance will have a
           different machine ID and thus a separate directory to place its
           boot-time resources in. If this feature is turned off with this
           option, care needs to be taken that multiple OS instances do not
           place conflicting files on the shared ESP and Extended Boot Loader
           Partitions, or that multiple OS instances are not possible.

       ----nnoo--ppaaggeerr
           Do not pipe output into a pager.

       --hh, ----hheellpp
           Print a short help text and exit.

       ----vveerrssiioonn
           Print a short version string and exit.

EEXXIITT SSTTAATTUUSS
       On success, 0 is returned, a non-zero failure code otherwise.

EENNVVIIRROONNMMEENNTT
       If _$_S_Y_S_T_E_M_D___R_E_L_A_X___E_S_P___C_H_E_C_K_S_=_1 is set the validation checks for the ESP
       are relaxed, and the path specified with ----eesspp--ppaatthh== may refer to any
       kind of file system on any kind of partition.

       Similarly, _$_S_Y_S_T_E_M_D___R_E_L_A_X___X_B_O_O_T_L_D_R___C_H_E_C_K_S_=_1 turns off some validation
       checks for the Extended Boot Loader partition.

SSEEEE AALLSSOO
       ssyysstteemmdd--bboooott(7), BBoooott LLooaaddeerr SSppeecciiffiiccaattiioonn[1], BBoooott LLooaaddeerr
       IInntteerrffaaccee[2], ssyysstteemmdd--bboooott--ssyysstteemm--ttookkeenn..sseerrvviiccee(8)

NNOOTTEESS
        1. Boot Loader Specification
           https://systemd.io/BOOT_LOADER_SPECIFICATION

        2. Boot Loader Interface
           https://systemd.io/BOOT_LOADER_INTERFACE

        3. Random Seeds
           https://systemd.io/RANDOM_SEEDS



systemd 249                                                         BOOTCTL(1)
eacee748e4862bb302773dc614b2820fade79eac17875446ab46b5da4f900f3f
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         