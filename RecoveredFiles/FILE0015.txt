GETXATTR(2)                Linux Programmer's Manual               GETXATTR(2)



NNAAMMEE
       getxattr, lgetxattr, fgetxattr - retrieve an extended attribute value

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee <<ssyyss//xxaattttrr..hh>>

       ssssiizzee__tt ggeettxxaattttrr((ccoonnsstt cchhaarr **_p_a_t_h,, ccoonnsstt cchhaarr **_n_a_m_e,,
                        vvooiidd **_v_a_l_u_e,, ssiizzee__tt _s_i_z_e));;
       ssssiizzee__tt llggeettxxaattttrr((ccoonnsstt cchhaarr **_p_a_t_h,, ccoonnsstt cchhaarr **_n_a_m_e,,
                        vvooiidd **_v_a_l_u_e,, ssiizzee__tt _s_i_z_e));;
       ssssiizzee__tt ffggeettxxaattttrr((iinntt _f_d,, ccoonnsstt cchhaarr **_n_a_m_e,,
                        vvooiidd **_v_a_l_u_e,, ssiizzee__tt _s_i_z_e));;

DDEESSCCRRIIPPTTIIOONN
       Extended attributes are _n_a_m_e:_v_a_l_u_e pairs associated with inodes (files,
       directories, symbolic links, etc.).  They are extensions to the  normal
       attributes  which  are  associated with all inodes in the system (i.e.,
       the ssttaatt(2) data).  A complete overview of extended attributes concepts
       can be found in xxaattttrr(7).

       ggeettxxaattttrr()  retrieves the value of the extended attribute identified by
       _n_a_m_e and associated with the given _p_a_t_h in the filesystem.  The  attri-
       bute  value is placed in the buffer pointed to by _v_a_l_u_e; _s_i_z_e specifies
       the size of that buffer.  The return value of the call is the number of
       bytes placed in _v_a_l_u_e.

       llggeettxxaattttrr()  is  identical  to ggeettxxaattttrr(), except in the case of a sym-
       bolic link, where the link itself is interrogated, not the file that it
       refers to.

       ffggeettxxaattttrr()  is identical to ggeettxxaattttrr(), only the open file referred to
       by _f_d (as returned by ooppeenn(2)) is interrogated in place of _p_a_t_h.

       An extended attribute _n_a_m_e is a null-terminated string.  The  name  in-
       cludes  a  namespace  prefix; there may be several, disjoint namespaces
       associated with an individual inode.  The value of an  extended  attri-
       bute  is  a chunk of arbitrary textual or binary data that was assigned
       using sseettxxaattttrr(2).

       If _s_i_z_e is specified as zero, these calls return the  current  size  of
       the  named extended attribute (and leave _v_a_l_u_e unchanged).  This can be
       used to determine the size of the buffer that should be supplied  in  a
       subsequent  call.   (But, bear in mind that there is a possibility that
       the attribute value may change between the two calls,  so  that  it  is
       still necessary to check the return status from the second call.)

RREETTUURRNN VVAALLUUEE
       On  success,  these  calls return a nonnegative value which is the size
       (in bytes) of the extended attribute value.  On failure, -1 is returned
       and _e_r_r_n_o is set appropriately.

EERRRROORRSS
       EE22BBIIGG  The  size of the attribute value is larger than the maximum size
              allowed; the attribute cannot be retrieved.  This can happen  on
              filesystems  that  support  very  large attribute values such as
              NFSv4, for example.

       EENNOODDAATTAA
              The named attribute does not exist, or the process has no access
              to this attribute.

       EENNOOTTSSUUPP
              Extended  attributes are not supported by the filesystem, or are
              disabled.

       EERRAANNGGEE The _s_i_z_e of the _v_a_l_u_e buffer is too small to hold the result.

       In addition, the errors documented in ssttaatt(2) can also occur.

VVEERRSSIIOONNSS
       These system calls have been available on Linux since kernel 2.4; glibc
       support is provided since version 2.3.

CCOONNFFOORRMMIINNGG TTOO
       These system calls are Linux-specific.

EEXXAAMMPPLLEESS
       See lliissttxxaattttrr(2).

SSEEEE AALLSSOO
       ggeettffaattttrr(1),  sseettffaattttrr(1), lliissttxxaattttrr(2), ooppeenn(2), rreemmoovveexxaattttrr(2), sseettxx--
       aattttrr(2), ssttaatt(2), ssyymmlliinnkk(7), xxaattttrr(7)

CCOOLLOOPPHHOONN
       This page is part of release 5.10 of the Linux  _m_a_n_-_p_a_g_e_s  project.   A
       description  of  the project, information about reporting bugs, and the
       latest    version    of    this    page,    can     be     found     at
       https://www.kernel.org/doc/man-pages/.



Linux                             2020-06-09                       GETXATTR(2)
1af54a0427b44abc75034eca821c290f79913dc486ffa97c8413a1f7de86b80f
