EVP_KDF-TLS13_KDF(7SSL)             OpenSSL            EVP_KDF-TLS13_KDF(7SSL)



NNAAMMEE
       EVP_KDF-TLS13_KDF - The TLS 1.3 EVP_KDF implementation

DDEESSCCRRIIPPTTIIOONN
       Support for computing the TLS 1.3 version of the HHKKDDFF KDF through the
       EEVVPP__KKDDFF API.

       The EVP_KDF-TLS13_KDF algorithm implements the HKDF key derivation
       function as used by TLS 1.3.

   IIddeennttiittyy
       "TLS13-KDF" is the name for this implementation; it can be used with
       the EEVVPP__KKDDFF__ffeettcchh(()) function.

   SSuuppppoorrtteedd ppaarraammeetteerrss
       The supported parameters are:

       "properties" (OOSSSSLL__KKDDFF__PPAARRAAMM__PPRROOPPEERRTTIIEESS) <UTF8 string>
       "digest" (OOSSSSLL__KKDDFF__PPAARRAAMM__DDIIGGEESSTT) <UTF8 string>
       "key" (OOSSSSLL__KKDDFF__PPAARRAAMM__KKEEYY) <octet string>
       "salt" (OOSSSSLL__KKDDFF__PPAARRAAMM__SSAALLTT) <octet string>
           These parameters work as described in "PARAMETERS" in EEVVPP__KKDDFF(3).

       "prefix" (OOSSSSLL__KKDDFF__PPAARRAAMM__PPRREEFFIIXX) <octet string>
           This parameter sets the label prefix on the specified TLS 1.3 KDF
           context.  For TLS 1.3 this should be set to the ASCII string "tls13
           " without a trailing zero byte.  Refer to RFC 8446 section 7.1 "Key
           Schedule" for details.

       "label" (OOSSSSLL__KKDDFF__PPAARRAAMM__LLAABBEELL) <octet string>
           This parameter sets the label on the specified TLS 1.3 KDF context.
           Refer to RFC 8446 section 7.1 "Key Schedule" for details.

       "data" (OOSSSSLL__KKDDFF__PPAARRAAMM__DDAATTAA) <octet string>
           This parameter sets the context data on the specified TLS 1.3 KDF
           context.  Refer to RFC 8446 section 7.1 "Key Schedule" for details.

       "mode" (OOSSSSLL__KKDDFF__PPAARRAAMM__MMOODDEE) <UTF8 string> or <integer>
           This parameter sets the mode for the TLS 1.3 KDF operation.  There
           are two modes that are currently defined:

           "EXTRACT_ONLY" or EEVVPP__KKDDFF__HHKKDDFF__MMOODDEE__EEXXTTRRAACCTT__OONNLLYY
               In this mode calling EEVVPP__KKDDFF__ddeerriivvee(3) will just perform the
               extract operation. The value returned will be the intermediate
               fixed-length pseudorandom key K.  The _k_e_y_l_e_n parameter must
               match the size of K, which can be looked up by calling
               EEVVPP__KKDDFF__CCTTXX__ggeett__kkddff__ssiizzee(()) after setting the mode and digest.

               The digest, key and salt values must be set before a key is
               derived otherwise an error will occur.

           "EXPAND_ONLY" or EEVVPP__KKDDFF__HHKKDDFF__MMOODDEE__EEXXPPAANNDD__OONNLLYY
               In this mode calling EEVVPP__KKDDFF__ddeerriivvee(3) will just perform the
               expand operation. The input key should be set to the
               intermediate fixed-length pseudorandom key K returned from a
               previous extract operation.

               The digest, key and info values must be set before a key is
               derived otherwise an error will occur.

NNOOTTEESS
       This KDF is intended for use by the TLS 1.3 implementation in libssl.
       It does not support all the options and capabilities that HKDF does.

       The _O_S_S_L___P_A_R_A_M array passed to EEVVPP__KKDDFF__ddeerriivvee(3) or
       EEVVPP__KKDDFF__CCTTXX__sseett__ppaarraammss(3) must specify all of the parameters required.
       This KDF does not support a piecemeal approach to providing these.

       A context for a TLS 1.3 KDF can be obtained by calling:

        EVP_KDF *kdf = EVP_KDF_fetch(NULL, "TLS13-KDF", NULL);
        EVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);

       The output length of a TLS 1.3 KDF expand operation is specified via
       the _k_e_y_l_e_n parameter to the EEVVPP__KKDDFF__ddeerriivvee(3) function.  When using
       EVP_KDF_HKDF_MODE_EXTRACT_ONLY the _k_e_y_l_e_n parameter must equal the size
       of the intermediate fixed-length pseudorandom key otherwise an error
       will occur.  For that mode, the fixed output size can be looked up by
       calling EEVVPP__KKDDFF__CCTTXX__ggeett__kkddff__ssiizzee(()) after setting the mode and digest on
       the EEVVPP__KKDDFF__CCTTXX.

CCOONNFFOORRMMIINNGG TTOO
       RFC 8446

SSEEEE AALLSSOO
       EEVVPP__KKDDFF(3), EEVVPP__KKDDFF__CCTTXX__nneeww(3), EEVVPP__KKDDFF__CCTTXX__ffrreeee(3),
       EEVVPP__KKDDFF__CCTTXX__ggeett__kkddff__ssiizzee(3), EEVVPP__KKDDFF__CCTTXX__sseett__ppaarraammss(3),
       EEVVPP__KKDDFF__ddeerriivvee(3), "PARAMETERS" in EEVVPP__KKDDFF(3), EEVVPP__KKDDFF--HHKKDDFF(7)

CCOOPPYYRRIIGGHHTT
       Copyright 2021 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



3.0.2                             2023-02-06           EVP_KDF-TLS13_KDF(7SSL)
a4fcb9df786f5eae05b320ab7e06a5e3b85f5f1e2c51ab5e5149059c842721ce
